input {
        file {
                path => "/usr/share/logstash/data/logs/**/*.log"
                start_position => "beginning"
                sincedb_path => "/usr/share/logstash/data/logs/.sincedb"
                codec => "json"
        }
}

filter {
        date {
                match => [ "[timestamp]", "ISO8601"]
        }
	grok {
		match => {"[log][file][path]" => "%{GREEDYDATA}/%{GREEDYDATA:aem_env_name}/%{GREEDYDATA}\.log"}
	}
	grok {
                match => {"rules" => "action=(?<waf_action>[a-zA-Z]+)"}
        }
	grok {
                match => {"rules" => 'waf=\"(?<waf_flags>[a-zA-Z0-9,\._-]+)\"'}
                match => {"rules" => 'waf=(?<waf_flags>[a-zA-Z0-9\._-]+)'}
        }
	if [waf_flags] {
		mutate {
			add_field => { "waf_flags_items" => "%{waf_flags}" }
		}
	} else {
		mutate {
			add_field => { "waf_flags_items" => "" }
		}
	}
	mutate {
                split => {"waf_flags_items" => ","}
        }
        grok {
                match => {"rules" => 'match=\"(?<waf_match>[a-zA-Z0-9,\._-]+)\"'}
                match => {"rules" => 'match=(?<waf_match>[a-zA-Z0-9\._-]+)'}
        }
	if [waf_match] {
		mutate {
			add_field => { "waf_match_items" => "%{waf_match}" }
		}
	} else {
		mutate {
			add_field => { "waf_match_items" => "" }
		}
	}
	mutate {
                split => {"waf_match_items" => ","}
        }
}

output {
        elasticsearch {
                hosts => "elasticsearch:9200"
                index => "aem-cdn-logs"
        }
        #stdout { codec => rubydebug }
}
